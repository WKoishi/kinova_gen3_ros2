/*
* KINOVA (R) KORTEX (TM)
*
* Copyright (c) 2019 Kinova inc. All rights reserved.
*
* This software may be modified and distributed under the
* terms of the BSD 3-Clause license.
*
* Refer to the LICENSE file for details.
*
*/

/*
 * This file has been auto-generated and should not be modified.
 */
 
#ifndef _KORTEX_BASE_SIMULATION_SERVICES_H_
#define _KORTEX_BASE_SIMULATION_SERVICES_H_

#include "kortex_driver/generated/interfaces/base_services_interface.h"

using namespace std;

class BaseSimulationServices : public IBaseServices
{
    public:
        BaseSimulationServices(rclcpp::Node::SharedPtr node_handle);

        virtual bool SetDeviceID(const std::shared_ptr<kortex_driver::srv::SetDeviceID::Request> req, std::shared_ptr<kortex_driver::srv::SetDeviceID::Response> res) override;
        virtual bool SetApiOptions(const std::shared_ptr<kortex_driver::srv::SetApiOptions::Request> req, std::shared_ptr<kortex_driver::srv::SetApiOptions::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::CreateUserProfile::Response>(const std::shared_ptr<kortex_driver::srv::CreateUserProfile::Request>)> CreateUserProfileHandler = nullptr;
        virtual bool CreateUserProfile(const std::shared_ptr<kortex_driver::srv::CreateUserProfile::Request> req, std::shared_ptr<kortex_driver::srv::CreateUserProfile::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::UpdateUserProfile::Response>(const std::shared_ptr<kortex_driver::srv::UpdateUserProfile::Request>)> UpdateUserProfileHandler = nullptr;
        virtual bool UpdateUserProfile(const std::shared_ptr<kortex_driver::srv::UpdateUserProfile::Request> req, std::shared_ptr<kortex_driver::srv::UpdateUserProfile::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::ReadUserProfile::Response>(const std::shared_ptr<kortex_driver::srv::ReadUserProfile::Request>)> ReadUserProfileHandler = nullptr;
        virtual bool ReadUserProfile(const std::shared_ptr<kortex_driver::srv::ReadUserProfile::Request> req, std::shared_ptr<kortex_driver::srv::ReadUserProfile::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::DeleteUserProfile::Response>(const std::shared_ptr<kortex_driver::srv::DeleteUserProfile::Request>)> DeleteUserProfileHandler = nullptr;
        virtual bool DeleteUserProfile(const std::shared_ptr<kortex_driver::srv::DeleteUserProfile::Request> req, std::shared_ptr<kortex_driver::srv::DeleteUserProfile::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::ReadAllUserProfiles::Response>(const std::shared_ptr<kortex_driver::srv::ReadAllUserProfiles::Request>)> ReadAllUserProfilesHandler = nullptr;
        virtual bool ReadAllUserProfiles(const std::shared_ptr<kortex_driver::srv::ReadAllUserProfiles::Request> req, std::shared_ptr<kortex_driver::srv::ReadAllUserProfiles::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::ReadAllUsers::Response>(const std::shared_ptr<kortex_driver::srv::ReadAllUsers::Request>)> ReadAllUsersHandler = nullptr;
        virtual bool ReadAllUsers(const std::shared_ptr<kortex_driver::srv::ReadAllUsers::Request> req, std::shared_ptr<kortex_driver::srv::ReadAllUsers::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::ChangePassword::Response>(const std::shared_ptr<kortex_driver::srv::ChangePassword::Request>)> ChangePasswordHandler = nullptr;
        virtual bool ChangePassword(const std::shared_ptr<kortex_driver::srv::ChangePassword::Request> req, std::shared_ptr<kortex_driver::srv::ChangePassword::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::CreateSequence::Response>(const std::shared_ptr<kortex_driver::srv::CreateSequence::Request>)> CreateSequenceHandler = nullptr;
        virtual bool CreateSequence(const std::shared_ptr<kortex_driver::srv::CreateSequence::Request> req, std::shared_ptr<kortex_driver::srv::CreateSequence::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::UpdateSequence::Response>(const std::shared_ptr<kortex_driver::srv::UpdateSequence::Request>)> UpdateSequenceHandler = nullptr;
        virtual bool UpdateSequence(const std::shared_ptr<kortex_driver::srv::UpdateSequence::Request> req, std::shared_ptr<kortex_driver::srv::UpdateSequence::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::ReadSequence::Response>(const std::shared_ptr<kortex_driver::srv::ReadSequence::Request>)> ReadSequenceHandler = nullptr;
        virtual bool ReadSequence(const std::shared_ptr<kortex_driver::srv::ReadSequence::Request> req, std::shared_ptr<kortex_driver::srv::ReadSequence::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::DeleteSequence::Response>(const std::shared_ptr<kortex_driver::srv::DeleteSequence::Request>)> DeleteSequenceHandler = nullptr;
        virtual bool DeleteSequence(const std::shared_ptr<kortex_driver::srv::DeleteSequence::Request> req, std::shared_ptr<kortex_driver::srv::DeleteSequence::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::ReadAllSequences::Response>(const std::shared_ptr<kortex_driver::srv::ReadAllSequences::Request>)> ReadAllSequencesHandler = nullptr;
        virtual bool ReadAllSequences(const std::shared_ptr<kortex_driver::srv::ReadAllSequences::Request> req, std::shared_ptr<kortex_driver::srv::ReadAllSequences::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::PlaySequence::Response>(const std::shared_ptr<kortex_driver::srv::PlaySequence::Request>)> PlaySequenceHandler = nullptr;
        virtual bool PlaySequence(const std::shared_ptr<kortex_driver::srv::PlaySequence::Request> req, std::shared_ptr<kortex_driver::srv::PlaySequence::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::PlayAdvancedSequence::Response>(const std::shared_ptr<kortex_driver::srv::PlayAdvancedSequence::Request>)> PlayAdvancedSequenceHandler = nullptr;
        virtual bool PlayAdvancedSequence(const std::shared_ptr<kortex_driver::srv::PlayAdvancedSequence::Request> req, std::shared_ptr<kortex_driver::srv::PlayAdvancedSequence::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::StopSequence::Response>(const std::shared_ptr<kortex_driver::srv::StopSequence::Request>)> StopSequenceHandler = nullptr;
        virtual bool StopSequence(const std::shared_ptr<kortex_driver::srv::StopSequence::Request> req, std::shared_ptr<kortex_driver::srv::StopSequence::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::PauseSequence::Response>(const std::shared_ptr<kortex_driver::srv::PauseSequence::Request>)> PauseSequenceHandler = nullptr;
        virtual bool PauseSequence(const std::shared_ptr<kortex_driver::srv::PauseSequence::Request> req, std::shared_ptr<kortex_driver::srv::PauseSequence::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::ResumeSequence::Response>(const std::shared_ptr<kortex_driver::srv::ResumeSequence::Request>)> ResumeSequenceHandler = nullptr;
        virtual bool ResumeSequence(const std::shared_ptr<kortex_driver::srv::ResumeSequence::Request> req, std::shared_ptr<kortex_driver::srv::ResumeSequence::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::CreateProtectionZone::Response>(const std::shared_ptr<kortex_driver::srv::CreateProtectionZone::Request>)> CreateProtectionZoneHandler = nullptr;
        virtual bool CreateProtectionZone(const std::shared_ptr<kortex_driver::srv::CreateProtectionZone::Request> req, std::shared_ptr<kortex_driver::srv::CreateProtectionZone::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::UpdateProtectionZone::Response>(const std::shared_ptr<kortex_driver::srv::UpdateProtectionZone::Request>)> UpdateProtectionZoneHandler = nullptr;
        virtual bool UpdateProtectionZone(const std::shared_ptr<kortex_driver::srv::UpdateProtectionZone::Request> req, std::shared_ptr<kortex_driver::srv::UpdateProtectionZone::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::ReadProtectionZone::Response>(const std::shared_ptr<kortex_driver::srv::ReadProtectionZone::Request>)> ReadProtectionZoneHandler = nullptr;
        virtual bool ReadProtectionZone(const std::shared_ptr<kortex_driver::srv::ReadProtectionZone::Request> req, std::shared_ptr<kortex_driver::srv::ReadProtectionZone::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::DeleteProtectionZone::Response>(const std::shared_ptr<kortex_driver::srv::DeleteProtectionZone::Request>)> DeleteProtectionZoneHandler = nullptr;
        virtual bool DeleteProtectionZone(const std::shared_ptr<kortex_driver::srv::DeleteProtectionZone::Request> req, std::shared_ptr<kortex_driver::srv::DeleteProtectionZone::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::ReadAllProtectionZones::Response>(const std::shared_ptr<kortex_driver::srv::ReadAllProtectionZones::Request>)> ReadAllProtectionZonesHandler = nullptr;
        virtual bool ReadAllProtectionZones(const std::shared_ptr<kortex_driver::srv::ReadAllProtectionZones::Request> req, std::shared_ptr<kortex_driver::srv::ReadAllProtectionZones::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::CreateMapping::Response>(const std::shared_ptr<kortex_driver::srv::CreateMapping::Request>)> CreateMappingHandler = nullptr;
        virtual bool CreateMapping(const std::shared_ptr<kortex_driver::srv::CreateMapping::Request> req, std::shared_ptr<kortex_driver::srv::CreateMapping::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::ReadMapping::Response>(const std::shared_ptr<kortex_driver::srv::ReadMapping::Request>)> ReadMappingHandler = nullptr;
        virtual bool ReadMapping(const std::shared_ptr<kortex_driver::srv::ReadMapping::Request> req, std::shared_ptr<kortex_driver::srv::ReadMapping::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::UpdateMapping::Response>(const std::shared_ptr<kortex_driver::srv::UpdateMapping::Request>)> UpdateMappingHandler = nullptr;
        virtual bool UpdateMapping(const std::shared_ptr<kortex_driver::srv::UpdateMapping::Request> req, std::shared_ptr<kortex_driver::srv::UpdateMapping::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::DeleteMapping::Response>(const std::shared_ptr<kortex_driver::srv::DeleteMapping::Request>)> DeleteMappingHandler = nullptr;
        virtual bool DeleteMapping(const std::shared_ptr<kortex_driver::srv::DeleteMapping::Request> req, std::shared_ptr<kortex_driver::srv::DeleteMapping::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::ReadAllMappings::Response>(const std::shared_ptr<kortex_driver::srv::ReadAllMappings::Request>)> ReadAllMappingsHandler = nullptr;
        virtual bool ReadAllMappings(const std::shared_ptr<kortex_driver::srv::ReadAllMappings::Request> req, std::shared_ptr<kortex_driver::srv::ReadAllMappings::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::CreateMap::Response>(const std::shared_ptr<kortex_driver::srv::CreateMap::Request>)> CreateMapHandler = nullptr;
        virtual bool CreateMap(const std::shared_ptr<kortex_driver::srv::CreateMap::Request> req, std::shared_ptr<kortex_driver::srv::CreateMap::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::ReadMap::Response>(const std::shared_ptr<kortex_driver::srv::ReadMap::Request>)> ReadMapHandler = nullptr;
        virtual bool ReadMap(const std::shared_ptr<kortex_driver::srv::ReadMap::Request> req, std::shared_ptr<kortex_driver::srv::ReadMap::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::UpdateMap::Response>(const std::shared_ptr<kortex_driver::srv::UpdateMap::Request>)> UpdateMapHandler = nullptr;
        virtual bool UpdateMap(const std::shared_ptr<kortex_driver::srv::UpdateMap::Request> req, std::shared_ptr<kortex_driver::srv::UpdateMap::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::DeleteMap::Response>(const std::shared_ptr<kortex_driver::srv::DeleteMap::Request>)> DeleteMapHandler = nullptr;
        virtual bool DeleteMap(const std::shared_ptr<kortex_driver::srv::DeleteMap::Request> req, std::shared_ptr<kortex_driver::srv::DeleteMap::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::ReadAllMaps::Response>(const std::shared_ptr<kortex_driver::srv::ReadAllMaps::Request>)> ReadAllMapsHandler = nullptr;
        virtual bool ReadAllMaps(const std::shared_ptr<kortex_driver::srv::ReadAllMaps::Request> req, std::shared_ptr<kortex_driver::srv::ReadAllMaps::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::ActivateMap::Response>(const std::shared_ptr<kortex_driver::srv::ActivateMap::Request>)> ActivateMapHandler = nullptr;
        virtual bool ActivateMap(const std::shared_ptr<kortex_driver::srv::ActivateMap::Request> req, std::shared_ptr<kortex_driver::srv::ActivateMap::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::CreateAction::Response>(const std::shared_ptr<kortex_driver::srv::CreateAction::Request>)> CreateActionHandler = nullptr;
        virtual bool CreateAction(const std::shared_ptr<kortex_driver::srv::CreateAction::Request> req, std::shared_ptr<kortex_driver::srv::CreateAction::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::ReadAction::Response>(const std::shared_ptr<kortex_driver::srv::ReadAction::Request>)> ReadActionHandler = nullptr;
        virtual bool ReadAction(const std::shared_ptr<kortex_driver::srv::ReadAction::Request> req, std::shared_ptr<kortex_driver::srv::ReadAction::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::ReadAllActions::Response>(const std::shared_ptr<kortex_driver::srv::ReadAllActions::Request>)> ReadAllActionsHandler = nullptr;
        virtual bool ReadAllActions(const std::shared_ptr<kortex_driver::srv::ReadAllActions::Request> req, std::shared_ptr<kortex_driver::srv::ReadAllActions::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::DeleteAction::Response>(const std::shared_ptr<kortex_driver::srv::DeleteAction::Request>)> DeleteActionHandler = nullptr;
        virtual bool DeleteAction(const std::shared_ptr<kortex_driver::srv::DeleteAction::Request> req, std::shared_ptr<kortex_driver::srv::DeleteAction::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::UpdateAction::Response>(const std::shared_ptr<kortex_driver::srv::UpdateAction::Request>)> UpdateActionHandler = nullptr;
        virtual bool UpdateAction(const std::shared_ptr<kortex_driver::srv::UpdateAction::Request> req, std::shared_ptr<kortex_driver::srv::UpdateAction::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::ExecuteActionFromReference::Response>(const std::shared_ptr<kortex_driver::srv::ExecuteActionFromReference::Request>)> ExecuteActionFromReferenceHandler = nullptr;
        virtual bool ExecuteActionFromReference(const std::shared_ptr<kortex_driver::srv::ExecuteActionFromReference::Request> req, std::shared_ptr<kortex_driver::srv::ExecuteActionFromReference::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::ExecuteAction::Response>(const std::shared_ptr<kortex_driver::srv::ExecuteAction::Request>)> ExecuteActionHandler = nullptr;
        virtual bool ExecuteAction(const std::shared_ptr<kortex_driver::srv::ExecuteAction::Request> req, std::shared_ptr<kortex_driver::srv::ExecuteAction::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::PauseAction::Response>(const std::shared_ptr<kortex_driver::srv::PauseAction::Request>)> PauseActionHandler = nullptr;
        virtual bool PauseAction(const std::shared_ptr<kortex_driver::srv::PauseAction::Request> req, std::shared_ptr<kortex_driver::srv::PauseAction::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::StopAction::Response>(const std::shared_ptr<kortex_driver::srv::StopAction::Request>)> StopActionHandler = nullptr;
        virtual bool StopAction(const std::shared_ptr<kortex_driver::srv::StopAction::Request> req, std::shared_ptr<kortex_driver::srv::StopAction::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::ResumeAction::Response>(const std::shared_ptr<kortex_driver::srv::ResumeAction::Request>)> ResumeActionHandler = nullptr;
        virtual bool ResumeAction(const std::shared_ptr<kortex_driver::srv::ResumeAction::Request> req, std::shared_ptr<kortex_driver::srv::ResumeAction::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::GetIPv4Configuration::Response>(const std::shared_ptr<kortex_driver::srv::GetIPv4Configuration::Request>)> GetIPv4ConfigurationHandler = nullptr;
        virtual bool GetIPv4Configuration(const std::shared_ptr<kortex_driver::srv::GetIPv4Configuration::Request> req, std::shared_ptr<kortex_driver::srv::GetIPv4Configuration::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::SetIPv4Configuration::Response>(const std::shared_ptr<kortex_driver::srv::SetIPv4Configuration::Request>)> SetIPv4ConfigurationHandler = nullptr;
        virtual bool SetIPv4Configuration(const std::shared_ptr<kortex_driver::srv::SetIPv4Configuration::Request> req, std::shared_ptr<kortex_driver::srv::SetIPv4Configuration::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::SetCommunicationInterfaceEnable::Response>(const std::shared_ptr<kortex_driver::srv::SetCommunicationInterfaceEnable::Request>)> SetCommunicationInterfaceEnableHandler = nullptr;
        virtual bool SetCommunicationInterfaceEnable(const std::shared_ptr<kortex_driver::srv::SetCommunicationInterfaceEnable::Request> req, std::shared_ptr<kortex_driver::srv::SetCommunicationInterfaceEnable::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::IsCommunicationInterfaceEnable::Response>(const std::shared_ptr<kortex_driver::srv::IsCommunicationInterfaceEnable::Request>)> IsCommunicationInterfaceEnableHandler = nullptr;
        virtual bool IsCommunicationInterfaceEnable(const std::shared_ptr<kortex_driver::srv::IsCommunicationInterfaceEnable::Request> req, std::shared_ptr<kortex_driver::srv::IsCommunicationInterfaceEnable::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::GetAvailableWifi::Response>(const std::shared_ptr<kortex_driver::srv::GetAvailableWifi::Request>)> GetAvailableWifiHandler = nullptr;
        virtual bool GetAvailableWifi(const std::shared_ptr<kortex_driver::srv::GetAvailableWifi::Request> req, std::shared_ptr<kortex_driver::srv::GetAvailableWifi::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::GetWifiInformation::Response>(const std::shared_ptr<kortex_driver::srv::GetWifiInformation::Request>)> GetWifiInformationHandler = nullptr;
        virtual bool GetWifiInformation(const std::shared_ptr<kortex_driver::srv::GetWifiInformation::Request> req, std::shared_ptr<kortex_driver::srv::GetWifiInformation::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::AddWifiConfiguration::Response>(const std::shared_ptr<kortex_driver::srv::AddWifiConfiguration::Request>)> AddWifiConfigurationHandler = nullptr;
        virtual bool AddWifiConfiguration(const std::shared_ptr<kortex_driver::srv::AddWifiConfiguration::Request> req, std::shared_ptr<kortex_driver::srv::AddWifiConfiguration::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::DeleteWifiConfiguration::Response>(const std::shared_ptr<kortex_driver::srv::DeleteWifiConfiguration::Request>)> DeleteWifiConfigurationHandler = nullptr;
        virtual bool DeleteWifiConfiguration(const std::shared_ptr<kortex_driver::srv::DeleteWifiConfiguration::Request> req, std::shared_ptr<kortex_driver::srv::DeleteWifiConfiguration::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::GetAllConfiguredWifis::Response>(const std::shared_ptr<kortex_driver::srv::GetAllConfiguredWifis::Request>)> GetAllConfiguredWifisHandler = nullptr;
        virtual bool GetAllConfiguredWifis(const std::shared_ptr<kortex_driver::srv::GetAllConfiguredWifis::Request> req, std::shared_ptr<kortex_driver::srv::GetAllConfiguredWifis::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::ConnectWifi::Response>(const std::shared_ptr<kortex_driver::srv::ConnectWifi::Request>)> ConnectWifiHandler = nullptr;
        virtual bool ConnectWifi(const std::shared_ptr<kortex_driver::srv::ConnectWifi::Request> req, std::shared_ptr<kortex_driver::srv::ConnectWifi::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::DisconnectWifi::Response>(const std::shared_ptr<kortex_driver::srv::DisconnectWifi::Request>)> DisconnectWifiHandler = nullptr;
        virtual bool DisconnectWifi(const std::shared_ptr<kortex_driver::srv::DisconnectWifi::Request> req, std::shared_ptr<kortex_driver::srv::DisconnectWifi::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::GetConnectedWifiInformation::Response>(const std::shared_ptr<kortex_driver::srv::GetConnectedWifiInformation::Request>)> GetConnectedWifiInformationHandler = nullptr;
        virtual bool GetConnectedWifiInformation(const std::shared_ptr<kortex_driver::srv::GetConnectedWifiInformation::Request> req, std::shared_ptr<kortex_driver::srv::GetConnectedWifiInformation::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::BaseUnsubscribe::Response>(const std::shared_ptr<kortex_driver::srv::BaseUnsubscribe::Request>)> Base_UnsubscribeHandler = nullptr;
        virtual bool Base_Unsubscribe(const std::shared_ptr<kortex_driver::srv::BaseUnsubscribe::Request> req, std::shared_ptr<kortex_driver::srv::BaseUnsubscribe::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::OnNotificationConfigurationChangeTopic::Response>(const std::shared_ptr<kortex_driver::srv::OnNotificationConfigurationChangeTopic::Request>)> OnNotificationConfigurationChangeTopicHandler = nullptr;
        virtual bool OnNotificationConfigurationChangeTopic(const std::shared_ptr<kortex_driver::srv::OnNotificationConfigurationChangeTopic::Request> req, std::shared_ptr<kortex_driver::srv::OnNotificationConfigurationChangeTopic::Response> res) override;
        virtual void cb_ConfigurationChangeTopic(Kinova::Api::Base::ConfigurationChangeNotification notif) override;
        std::function<std::shared_ptr<kortex_driver::srv::OnNotificationMappingInfoTopic::Response>(const std::shared_ptr<kortex_driver::srv::OnNotificationMappingInfoTopic::Request>)> OnNotificationMappingInfoTopicHandler = nullptr;
        virtual bool OnNotificationMappingInfoTopic(const std::shared_ptr<kortex_driver::srv::OnNotificationMappingInfoTopic::Request> req, std::shared_ptr<kortex_driver::srv::OnNotificationMappingInfoTopic::Response> res) override;
        virtual void cb_MappingInfoTopic(Kinova::Api::Base::MappingInfoNotification notif) override;
        std::function<std::shared_ptr<kortex_driver::srv::BaseOnNotificationControlModeTopic::Response>(const std::shared_ptr<kortex_driver::srv::BaseOnNotificationControlModeTopic::Request>)> Base_OnNotificationControlModeTopicHandler = nullptr;
        virtual bool Base_OnNotificationControlModeTopic(const std::shared_ptr<kortex_driver::srv::BaseOnNotificationControlModeTopic::Request> req, std::shared_ptr<kortex_driver::srv::BaseOnNotificationControlModeTopic::Response> res) override;
        virtual void cb_ControlModeTopic(Kinova::Api::Base::ControlModeNotification notif) override;
        std::function<std::shared_ptr<kortex_driver::srv::OnNotificationOperatingModeTopic::Response>(const std::shared_ptr<kortex_driver::srv::OnNotificationOperatingModeTopic::Request>)> OnNotificationOperatingModeTopicHandler = nullptr;
        virtual bool OnNotificationOperatingModeTopic(const std::shared_ptr<kortex_driver::srv::OnNotificationOperatingModeTopic::Request> req, std::shared_ptr<kortex_driver::srv::OnNotificationOperatingModeTopic::Response> res) override;
        virtual void cb_OperatingModeTopic(Kinova::Api::Base::OperatingModeNotification notif) override;
        std::function<std::shared_ptr<kortex_driver::srv::OnNotificationSequenceInfoTopic::Response>(const std::shared_ptr<kortex_driver::srv::OnNotificationSequenceInfoTopic::Request>)> OnNotificationSequenceInfoTopicHandler = nullptr;
        virtual bool OnNotificationSequenceInfoTopic(const std::shared_ptr<kortex_driver::srv::OnNotificationSequenceInfoTopic::Request> req, std::shared_ptr<kortex_driver::srv::OnNotificationSequenceInfoTopic::Response> res) override;
        virtual void cb_SequenceInfoTopic(Kinova::Api::Base::SequenceInfoNotification notif) override;
        std::function<std::shared_ptr<kortex_driver::srv::OnNotificationProtectionZoneTopic::Response>(const std::shared_ptr<kortex_driver::srv::OnNotificationProtectionZoneTopic::Request>)> OnNotificationProtectionZoneTopicHandler = nullptr;
        virtual bool OnNotificationProtectionZoneTopic(const std::shared_ptr<kortex_driver::srv::OnNotificationProtectionZoneTopic::Request> req, std::shared_ptr<kortex_driver::srv::OnNotificationProtectionZoneTopic::Response> res) override;
        virtual void cb_ProtectionZoneTopic(Kinova::Api::Base::ProtectionZoneNotification notif) override;
        std::function<std::shared_ptr<kortex_driver::srv::OnNotificationUserTopic::Response>(const std::shared_ptr<kortex_driver::srv::OnNotificationUserTopic::Request>)> OnNotificationUserTopicHandler = nullptr;
        virtual bool OnNotificationUserTopic(const std::shared_ptr<kortex_driver::srv::OnNotificationUserTopic::Request> req, std::shared_ptr<kortex_driver::srv::OnNotificationUserTopic::Response> res) override;
        virtual void cb_UserTopic(Kinova::Api::Base::UserNotification notif) override;
        std::function<std::shared_ptr<kortex_driver::srv::OnNotificationControllerTopic::Response>(const std::shared_ptr<kortex_driver::srv::OnNotificationControllerTopic::Request>)> OnNotificationControllerTopicHandler = nullptr;
        virtual bool OnNotificationControllerTopic(const std::shared_ptr<kortex_driver::srv::OnNotificationControllerTopic::Request> req, std::shared_ptr<kortex_driver::srv::OnNotificationControllerTopic::Response> res) override;
        virtual void cb_ControllerTopic(Kinova::Api::Base::ControllerNotification notif) override;
        std::function<std::shared_ptr<kortex_driver::srv::OnNotificationActionTopic::Response>(const std::shared_ptr<kortex_driver::srv::OnNotificationActionTopic::Request>)> OnNotificationActionTopicHandler = nullptr;
        virtual bool OnNotificationActionTopic(const std::shared_ptr<kortex_driver::srv::OnNotificationActionTopic::Request> req, std::shared_ptr<kortex_driver::srv::OnNotificationActionTopic::Response> res) override;
        virtual void cb_ActionTopic(Kinova::Api::Base::ActionNotification notif) override;
        std::function<std::shared_ptr<kortex_driver::srv::OnNotificationRobotEventTopic::Response>(const std::shared_ptr<kortex_driver::srv::OnNotificationRobotEventTopic::Request>)> OnNotificationRobotEventTopicHandler = nullptr;
        virtual bool OnNotificationRobotEventTopic(const std::shared_ptr<kortex_driver::srv::OnNotificationRobotEventTopic::Request> req, std::shared_ptr<kortex_driver::srv::OnNotificationRobotEventTopic::Response> res) override;
        virtual void cb_RobotEventTopic(Kinova::Api::Base::RobotEventNotification notif) override;
        std::function<std::shared_ptr<kortex_driver::srv::PlayCartesianTrajectory::Response>(const std::shared_ptr<kortex_driver::srv::PlayCartesianTrajectory::Request>)> PlayCartesianTrajectoryHandler = nullptr;
        virtual bool PlayCartesianTrajectory(const std::shared_ptr<kortex_driver::srv::PlayCartesianTrajectory::Request> req, std::shared_ptr<kortex_driver::srv::PlayCartesianTrajectory::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::PlayCartesianTrajectoryPosition::Response>(const std::shared_ptr<kortex_driver::srv::PlayCartesianTrajectoryPosition::Request>)> PlayCartesianTrajectoryPositionHandler = nullptr;
        virtual bool PlayCartesianTrajectoryPosition(const std::shared_ptr<kortex_driver::srv::PlayCartesianTrajectoryPosition::Request> req, std::shared_ptr<kortex_driver::srv::PlayCartesianTrajectoryPosition::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::PlayCartesianTrajectoryOrientation::Response>(const std::shared_ptr<kortex_driver::srv::PlayCartesianTrajectoryOrientation::Request>)> PlayCartesianTrajectoryOrientationHandler = nullptr;
        virtual bool PlayCartesianTrajectoryOrientation(const std::shared_ptr<kortex_driver::srv::PlayCartesianTrajectoryOrientation::Request> req, std::shared_ptr<kortex_driver::srv::PlayCartesianTrajectoryOrientation::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::Stop::Response>(const std::shared_ptr<kortex_driver::srv::Stop::Request>)> StopHandler = nullptr;
        virtual bool Stop(const std::shared_ptr<kortex_driver::srv::Stop::Request> req, std::shared_ptr<kortex_driver::srv::Stop::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::GetMeasuredCartesianPose::Response>(const std::shared_ptr<kortex_driver::srv::GetMeasuredCartesianPose::Request>)> GetMeasuredCartesianPoseHandler = nullptr;
        virtual bool GetMeasuredCartesianPose(const std::shared_ptr<kortex_driver::srv::GetMeasuredCartesianPose::Request> req, std::shared_ptr<kortex_driver::srv::GetMeasuredCartesianPose::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::SendWrenchCommand::Response>(const std::shared_ptr<kortex_driver::srv::SendWrenchCommand::Request>)> SendWrenchCommandHandler = nullptr;
        virtual bool SendWrenchCommand(const std::shared_ptr<kortex_driver::srv::SendWrenchCommand::Request> req, std::shared_ptr<kortex_driver::srv::SendWrenchCommand::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::SendWrenchJoystickCommand::Response>(const std::shared_ptr<kortex_driver::srv::SendWrenchJoystickCommand::Request>)> SendWrenchJoystickCommandHandler = nullptr;
        virtual bool SendWrenchJoystickCommand(const std::shared_ptr<kortex_driver::srv::SendWrenchJoystickCommand::Request> req, std::shared_ptr<kortex_driver::srv::SendWrenchJoystickCommand::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::SendTwistJoystickCommand::Response>(const std::shared_ptr<kortex_driver::srv::SendTwistJoystickCommand::Request>)> SendTwistJoystickCommandHandler = nullptr;
        virtual bool SendTwistJoystickCommand(const std::shared_ptr<kortex_driver::srv::SendTwistJoystickCommand::Request> req, std::shared_ptr<kortex_driver::srv::SendTwistJoystickCommand::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::SendTwistCommand::Response>(const std::shared_ptr<kortex_driver::srv::SendTwistCommand::Request>)> SendTwistCommandHandler = nullptr;
        virtual bool SendTwistCommand(const std::shared_ptr<kortex_driver::srv::SendTwistCommand::Request> req, std::shared_ptr<kortex_driver::srv::SendTwistCommand::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::PlayJointTrajectory::Response>(const std::shared_ptr<kortex_driver::srv::PlayJointTrajectory::Request>)> PlayJointTrajectoryHandler = nullptr;
        virtual bool PlayJointTrajectory(const std::shared_ptr<kortex_driver::srv::PlayJointTrajectory::Request> req, std::shared_ptr<kortex_driver::srv::PlayJointTrajectory::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::PlaySelectedJointTrajectory::Response>(const std::shared_ptr<kortex_driver::srv::PlaySelectedJointTrajectory::Request>)> PlaySelectedJointTrajectoryHandler = nullptr;
        virtual bool PlaySelectedJointTrajectory(const std::shared_ptr<kortex_driver::srv::PlaySelectedJointTrajectory::Request> req, std::shared_ptr<kortex_driver::srv::PlaySelectedJointTrajectory::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::GetMeasuredJointAngles::Response>(const std::shared_ptr<kortex_driver::srv::GetMeasuredJointAngles::Request>)> GetMeasuredJointAnglesHandler = nullptr;
        virtual bool GetMeasuredJointAngles(const std::shared_ptr<kortex_driver::srv::GetMeasuredJointAngles::Request> req, std::shared_ptr<kortex_driver::srv::GetMeasuredJointAngles::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::SendJointSpeedsCommand::Response>(const std::shared_ptr<kortex_driver::srv::SendJointSpeedsCommand::Request>)> SendJointSpeedsCommandHandler = nullptr;
        virtual bool SendJointSpeedsCommand(const std::shared_ptr<kortex_driver::srv::SendJointSpeedsCommand::Request> req, std::shared_ptr<kortex_driver::srv::SendJointSpeedsCommand::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::SendSelectedJointSpeedCommand::Response>(const std::shared_ptr<kortex_driver::srv::SendSelectedJointSpeedCommand::Request>)> SendSelectedJointSpeedCommandHandler = nullptr;
        virtual bool SendSelectedJointSpeedCommand(const std::shared_ptr<kortex_driver::srv::SendSelectedJointSpeedCommand::Request> req, std::shared_ptr<kortex_driver::srv::SendSelectedJointSpeedCommand::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::SendGripperCommand::Response>(const std::shared_ptr<kortex_driver::srv::SendGripperCommand::Request>)> SendGripperCommandHandler = nullptr;
        virtual bool SendGripperCommand(const std::shared_ptr<kortex_driver::srv::SendGripperCommand::Request> req, std::shared_ptr<kortex_driver::srv::SendGripperCommand::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::GetMeasuredGripperMovement::Response>(const std::shared_ptr<kortex_driver::srv::GetMeasuredGripperMovement::Request>)> GetMeasuredGripperMovementHandler = nullptr;
        virtual bool GetMeasuredGripperMovement(const std::shared_ptr<kortex_driver::srv::GetMeasuredGripperMovement::Request> req, std::shared_ptr<kortex_driver::srv::GetMeasuredGripperMovement::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::SetAdmittance::Response>(const std::shared_ptr<kortex_driver::srv::SetAdmittance::Request>)> SetAdmittanceHandler = nullptr;
        virtual bool SetAdmittance(const std::shared_ptr<kortex_driver::srv::SetAdmittance::Request> req, std::shared_ptr<kortex_driver::srv::SetAdmittance::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::SetOperatingMode::Response>(const std::shared_ptr<kortex_driver::srv::SetOperatingMode::Request>)> SetOperatingModeHandler = nullptr;
        virtual bool SetOperatingMode(const std::shared_ptr<kortex_driver::srv::SetOperatingMode::Request> req, std::shared_ptr<kortex_driver::srv::SetOperatingMode::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::ApplyEmergencyStop::Response>(const std::shared_ptr<kortex_driver::srv::ApplyEmergencyStop::Request>)> ApplyEmergencyStopHandler = nullptr;
        virtual bool ApplyEmergencyStop(const std::shared_ptr<kortex_driver::srv::ApplyEmergencyStop::Request> req, std::shared_ptr<kortex_driver::srv::ApplyEmergencyStop::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::BaseClearFaults::Response>(const std::shared_ptr<kortex_driver::srv::BaseClearFaults::Request>)> Base_ClearFaultsHandler = nullptr;
        virtual bool Base_ClearFaults(const std::shared_ptr<kortex_driver::srv::BaseClearFaults::Request> req, std::shared_ptr<kortex_driver::srv::BaseClearFaults::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::BaseGetControlMode::Response>(const std::shared_ptr<kortex_driver::srv::BaseGetControlMode::Request>)> Base_GetControlModeHandler = nullptr;
        virtual bool Base_GetControlMode(const std::shared_ptr<kortex_driver::srv::BaseGetControlMode::Request> req, std::shared_ptr<kortex_driver::srv::BaseGetControlMode::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::GetOperatingMode::Response>(const std::shared_ptr<kortex_driver::srv::GetOperatingMode::Request>)> GetOperatingModeHandler = nullptr;
        virtual bool GetOperatingMode(const std::shared_ptr<kortex_driver::srv::GetOperatingMode::Request> req, std::shared_ptr<kortex_driver::srv::GetOperatingMode::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::SetServoingMode::Response>(const std::shared_ptr<kortex_driver::srv::SetServoingMode::Request>)> SetServoingModeHandler = nullptr;
        virtual bool SetServoingMode(const std::shared_ptr<kortex_driver::srv::SetServoingMode::Request> req, std::shared_ptr<kortex_driver::srv::SetServoingMode::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::GetServoingMode::Response>(const std::shared_ptr<kortex_driver::srv::GetServoingMode::Request>)> GetServoingModeHandler = nullptr;
        virtual bool GetServoingMode(const std::shared_ptr<kortex_driver::srv::GetServoingMode::Request> req, std::shared_ptr<kortex_driver::srv::GetServoingMode::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::OnNotificationServoingModeTopic::Response>(const std::shared_ptr<kortex_driver::srv::OnNotificationServoingModeTopic::Request>)> OnNotificationServoingModeTopicHandler = nullptr;
        virtual bool OnNotificationServoingModeTopic(const std::shared_ptr<kortex_driver::srv::OnNotificationServoingModeTopic::Request> req, std::shared_ptr<kortex_driver::srv::OnNotificationServoingModeTopic::Response> res) override;
        virtual void cb_ServoingModeTopic(Kinova::Api::Base::ServoingModeNotification notif) override;
        std::function<std::shared_ptr<kortex_driver::srv::RestoreFactorySettings::Response>(const std::shared_ptr<kortex_driver::srv::RestoreFactorySettings::Request>)> RestoreFactorySettingsHandler = nullptr;
        virtual bool RestoreFactorySettings(const std::shared_ptr<kortex_driver::srv::RestoreFactorySettings::Request> req, std::shared_ptr<kortex_driver::srv::RestoreFactorySettings::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::OnNotificationFactoryTopic::Response>(const std::shared_ptr<kortex_driver::srv::OnNotificationFactoryTopic::Request>)> OnNotificationFactoryTopicHandler = nullptr;
        virtual bool OnNotificationFactoryTopic(const std::shared_ptr<kortex_driver::srv::OnNotificationFactoryTopic::Request> req, std::shared_ptr<kortex_driver::srv::OnNotificationFactoryTopic::Response> res) override;
        virtual void cb_FactoryTopic(Kinova::Api::Base::FactoryNotification notif) override;
        std::function<std::shared_ptr<kortex_driver::srv::GetAllConnectedControllers::Response>(const std::shared_ptr<kortex_driver::srv::GetAllConnectedControllers::Request>)> GetAllConnectedControllersHandler = nullptr;
        virtual bool GetAllConnectedControllers(const std::shared_ptr<kortex_driver::srv::GetAllConnectedControllers::Request> req, std::shared_ptr<kortex_driver::srv::GetAllConnectedControllers::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::GetControllerState::Response>(const std::shared_ptr<kortex_driver::srv::GetControllerState::Request>)> GetControllerStateHandler = nullptr;
        virtual bool GetControllerState(const std::shared_ptr<kortex_driver::srv::GetControllerState::Request> req, std::shared_ptr<kortex_driver::srv::GetControllerState::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::GetActuatorCount::Response>(const std::shared_ptr<kortex_driver::srv::GetActuatorCount::Request>)> GetActuatorCountHandler = nullptr;
        virtual bool GetActuatorCount(const std::shared_ptr<kortex_driver::srv::GetActuatorCount::Request> req, std::shared_ptr<kortex_driver::srv::GetActuatorCount::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::StartWifiScan::Response>(const std::shared_ptr<kortex_driver::srv::StartWifiScan::Request>)> StartWifiScanHandler = nullptr;
        virtual bool StartWifiScan(const std::shared_ptr<kortex_driver::srv::StartWifiScan::Request> req, std::shared_ptr<kortex_driver::srv::StartWifiScan::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::GetConfiguredWifi::Response>(const std::shared_ptr<kortex_driver::srv::GetConfiguredWifi::Request>)> GetConfiguredWifiHandler = nullptr;
        virtual bool GetConfiguredWifi(const std::shared_ptr<kortex_driver::srv::GetConfiguredWifi::Request> req, std::shared_ptr<kortex_driver::srv::GetConfiguredWifi::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::OnNotificationNetworkTopic::Response>(const std::shared_ptr<kortex_driver::srv::OnNotificationNetworkTopic::Request>)> OnNotificationNetworkTopicHandler = nullptr;
        virtual bool OnNotificationNetworkTopic(const std::shared_ptr<kortex_driver::srv::OnNotificationNetworkTopic::Request> req, std::shared_ptr<kortex_driver::srv::OnNotificationNetworkTopic::Response> res) override;
        virtual void cb_NetworkTopic(Kinova::Api::Base::NetworkNotification notif) override;
        std::function<std::shared_ptr<kortex_driver::srv::GetArmState::Response>(const std::shared_ptr<kortex_driver::srv::GetArmState::Request>)> GetArmStateHandler = nullptr;
        virtual bool GetArmState(const std::shared_ptr<kortex_driver::srv::GetArmState::Request> req, std::shared_ptr<kortex_driver::srv::GetArmState::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::OnNotificationArmStateTopic::Response>(const std::shared_ptr<kortex_driver::srv::OnNotificationArmStateTopic::Request>)> OnNotificationArmStateTopicHandler = nullptr;
        virtual bool OnNotificationArmStateTopic(const std::shared_ptr<kortex_driver::srv::OnNotificationArmStateTopic::Request> req, std::shared_ptr<kortex_driver::srv::OnNotificationArmStateTopic::Response> res) override;
        virtual void cb_ArmStateTopic(Kinova::Api::Base::ArmStateNotification notif) override;
        std::function<std::shared_ptr<kortex_driver::srv::GetIPv4Information::Response>(const std::shared_ptr<kortex_driver::srv::GetIPv4Information::Request>)> GetIPv4InformationHandler = nullptr;
        virtual bool GetIPv4Information(const std::shared_ptr<kortex_driver::srv::GetIPv4Information::Request> req, std::shared_ptr<kortex_driver::srv::GetIPv4Information::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::SetWifiCountryCode::Response>(const std::shared_ptr<kortex_driver::srv::SetWifiCountryCode::Request>)> SetWifiCountryCodeHandler = nullptr;
        virtual bool SetWifiCountryCode(const std::shared_ptr<kortex_driver::srv::SetWifiCountryCode::Request> req, std::shared_ptr<kortex_driver::srv::SetWifiCountryCode::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::GetWifiCountryCode::Response>(const std::shared_ptr<kortex_driver::srv::GetWifiCountryCode::Request>)> GetWifiCountryCodeHandler = nullptr;
        virtual bool GetWifiCountryCode(const std::shared_ptr<kortex_driver::srv::GetWifiCountryCode::Request> req, std::shared_ptr<kortex_driver::srv::GetWifiCountryCode::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::BaseSetCapSenseConfig::Response>(const std::shared_ptr<kortex_driver::srv::BaseSetCapSenseConfig::Request>)> Base_SetCapSenseConfigHandler = nullptr;
        virtual bool Base_SetCapSenseConfig(const std::shared_ptr<kortex_driver::srv::BaseSetCapSenseConfig::Request> req, std::shared_ptr<kortex_driver::srv::BaseSetCapSenseConfig::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::BaseGetCapSenseConfig::Response>(const std::shared_ptr<kortex_driver::srv::BaseGetCapSenseConfig::Request>)> Base_GetCapSenseConfigHandler = nullptr;
        virtual bool Base_GetCapSenseConfig(const std::shared_ptr<kortex_driver::srv::BaseGetCapSenseConfig::Request> req, std::shared_ptr<kortex_driver::srv::BaseGetCapSenseConfig::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::GetAllJointsSpeedHardLimitation::Response>(const std::shared_ptr<kortex_driver::srv::GetAllJointsSpeedHardLimitation::Request>)> GetAllJointsSpeedHardLimitationHandler = nullptr;
        virtual bool GetAllJointsSpeedHardLimitation(const std::shared_ptr<kortex_driver::srv::GetAllJointsSpeedHardLimitation::Request> req, std::shared_ptr<kortex_driver::srv::GetAllJointsSpeedHardLimitation::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::GetAllJointsTorqueHardLimitation::Response>(const std::shared_ptr<kortex_driver::srv::GetAllJointsTorqueHardLimitation::Request>)> GetAllJointsTorqueHardLimitationHandler = nullptr;
        virtual bool GetAllJointsTorqueHardLimitation(const std::shared_ptr<kortex_driver::srv::GetAllJointsTorqueHardLimitation::Request> req, std::shared_ptr<kortex_driver::srv::GetAllJointsTorqueHardLimitation::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::GetTwistHardLimitation::Response>(const std::shared_ptr<kortex_driver::srv::GetTwistHardLimitation::Request>)> GetTwistHardLimitationHandler = nullptr;
        virtual bool GetTwistHardLimitation(const std::shared_ptr<kortex_driver::srv::GetTwistHardLimitation::Request> req, std::shared_ptr<kortex_driver::srv::GetTwistHardLimitation::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::GetWrenchHardLimitation::Response>(const std::shared_ptr<kortex_driver::srv::GetWrenchHardLimitation::Request>)> GetWrenchHardLimitationHandler = nullptr;
        virtual bool GetWrenchHardLimitation(const std::shared_ptr<kortex_driver::srv::GetWrenchHardLimitation::Request> req, std::shared_ptr<kortex_driver::srv::GetWrenchHardLimitation::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::SendJointSpeedsJoystickCommand::Response>(const std::shared_ptr<kortex_driver::srv::SendJointSpeedsJoystickCommand::Request>)> SendJointSpeedsJoystickCommandHandler = nullptr;
        virtual bool SendJointSpeedsJoystickCommand(const std::shared_ptr<kortex_driver::srv::SendJointSpeedsJoystickCommand::Request> req, std::shared_ptr<kortex_driver::srv::SendJointSpeedsJoystickCommand::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::SendSelectedJointSpeedJoystickCommand::Response>(const std::shared_ptr<kortex_driver::srv::SendSelectedJointSpeedJoystickCommand::Request>)> SendSelectedJointSpeedJoystickCommandHandler = nullptr;
        virtual bool SendSelectedJointSpeedJoystickCommand(const std::shared_ptr<kortex_driver::srv::SendSelectedJointSpeedJoystickCommand::Request> req, std::shared_ptr<kortex_driver::srv::SendSelectedJointSpeedJoystickCommand::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::EnableBridge::Response>(const std::shared_ptr<kortex_driver::srv::EnableBridge::Request>)> EnableBridgeHandler = nullptr;
        virtual bool EnableBridge(const std::shared_ptr<kortex_driver::srv::EnableBridge::Request> req, std::shared_ptr<kortex_driver::srv::EnableBridge::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::DisableBridge::Response>(const std::shared_ptr<kortex_driver::srv::DisableBridge::Request>)> DisableBridgeHandler = nullptr;
        virtual bool DisableBridge(const std::shared_ptr<kortex_driver::srv::DisableBridge::Request> req, std::shared_ptr<kortex_driver::srv::DisableBridge::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::GetBridgeList::Response>(const std::shared_ptr<kortex_driver::srv::GetBridgeList::Request>)> GetBridgeListHandler = nullptr;
        virtual bool GetBridgeList(const std::shared_ptr<kortex_driver::srv::GetBridgeList::Request> req, std::shared_ptr<kortex_driver::srv::GetBridgeList::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::GetBridgeConfig::Response>(const std::shared_ptr<kortex_driver::srv::GetBridgeConfig::Request>)> GetBridgeConfigHandler = nullptr;
        virtual bool GetBridgeConfig(const std::shared_ptr<kortex_driver::srv::GetBridgeConfig::Request> req, std::shared_ptr<kortex_driver::srv::GetBridgeConfig::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::PlayPreComputedJointTrajectory::Response>(const std::shared_ptr<kortex_driver::srv::PlayPreComputedJointTrajectory::Request>)> PlayPreComputedJointTrajectoryHandler = nullptr;
        virtual bool PlayPreComputedJointTrajectory(const std::shared_ptr<kortex_driver::srv::PlayPreComputedJointTrajectory::Request> req, std::shared_ptr<kortex_driver::srv::PlayPreComputedJointTrajectory::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::GetProductConfiguration::Response>(const std::shared_ptr<kortex_driver::srv::GetProductConfiguration::Request>)> GetProductConfigurationHandler = nullptr;
        virtual bool GetProductConfiguration(const std::shared_ptr<kortex_driver::srv::GetProductConfiguration::Request> req, std::shared_ptr<kortex_driver::srv::GetProductConfiguration::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::UpdateEndEffectorTypeConfiguration::Response>(const std::shared_ptr<kortex_driver::srv::UpdateEndEffectorTypeConfiguration::Request>)> UpdateEndEffectorTypeConfigurationHandler = nullptr;
        virtual bool UpdateEndEffectorTypeConfiguration(const std::shared_ptr<kortex_driver::srv::UpdateEndEffectorTypeConfiguration::Request> req, std::shared_ptr<kortex_driver::srv::UpdateEndEffectorTypeConfiguration::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::RestoreFactoryProductConfiguration::Response>(const std::shared_ptr<kortex_driver::srv::RestoreFactoryProductConfiguration::Request>)> RestoreFactoryProductConfigurationHandler = nullptr;
        virtual bool RestoreFactoryProductConfiguration(const std::shared_ptr<kortex_driver::srv::RestoreFactoryProductConfiguration::Request> req, std::shared_ptr<kortex_driver::srv::RestoreFactoryProductConfiguration::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::GetTrajectoryErrorReport::Response>(const std::shared_ptr<kortex_driver::srv::GetTrajectoryErrorReport::Request>)> GetTrajectoryErrorReportHandler = nullptr;
        virtual bool GetTrajectoryErrorReport(const std::shared_ptr<kortex_driver::srv::GetTrajectoryErrorReport::Request> req, std::shared_ptr<kortex_driver::srv::GetTrajectoryErrorReport::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::GetAllJointsSpeedSoftLimitation::Response>(const std::shared_ptr<kortex_driver::srv::GetAllJointsSpeedSoftLimitation::Request>)> GetAllJointsSpeedSoftLimitationHandler = nullptr;
        virtual bool GetAllJointsSpeedSoftLimitation(const std::shared_ptr<kortex_driver::srv::GetAllJointsSpeedSoftLimitation::Request> req, std::shared_ptr<kortex_driver::srv::GetAllJointsSpeedSoftLimitation::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::GetAllJointsTorqueSoftLimitation::Response>(const std::shared_ptr<kortex_driver::srv::GetAllJointsTorqueSoftLimitation::Request>)> GetAllJointsTorqueSoftLimitationHandler = nullptr;
        virtual bool GetAllJointsTorqueSoftLimitation(const std::shared_ptr<kortex_driver::srv::GetAllJointsTorqueSoftLimitation::Request> req, std::shared_ptr<kortex_driver::srv::GetAllJointsTorqueSoftLimitation::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::GetTwistSoftLimitation::Response>(const std::shared_ptr<kortex_driver::srv::GetTwistSoftLimitation::Request>)> GetTwistSoftLimitationHandler = nullptr;
        virtual bool GetTwistSoftLimitation(const std::shared_ptr<kortex_driver::srv::GetTwistSoftLimitation::Request> req, std::shared_ptr<kortex_driver::srv::GetTwistSoftLimitation::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::GetWrenchSoftLimitation::Response>(const std::shared_ptr<kortex_driver::srv::GetWrenchSoftLimitation::Request>)> GetWrenchSoftLimitationHandler = nullptr;
        virtual bool GetWrenchSoftLimitation(const std::shared_ptr<kortex_driver::srv::GetWrenchSoftLimitation::Request> req, std::shared_ptr<kortex_driver::srv::GetWrenchSoftLimitation::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::SetControllerConfigurationMode::Response>(const std::shared_ptr<kortex_driver::srv::SetControllerConfigurationMode::Request>)> SetControllerConfigurationModeHandler = nullptr;
        virtual bool SetControllerConfigurationMode(const std::shared_ptr<kortex_driver::srv::SetControllerConfigurationMode::Request> req, std::shared_ptr<kortex_driver::srv::SetControllerConfigurationMode::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::GetControllerConfigurationMode::Response>(const std::shared_ptr<kortex_driver::srv::GetControllerConfigurationMode::Request>)> GetControllerConfigurationModeHandler = nullptr;
        virtual bool GetControllerConfigurationMode(const std::shared_ptr<kortex_driver::srv::GetControllerConfigurationMode::Request> req, std::shared_ptr<kortex_driver::srv::GetControllerConfigurationMode::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::StartTeaching::Response>(const std::shared_ptr<kortex_driver::srv::StartTeaching::Request>)> StartTeachingHandler = nullptr;
        virtual bool StartTeaching(const std::shared_ptr<kortex_driver::srv::StartTeaching::Request> req, std::shared_ptr<kortex_driver::srv::StartTeaching::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::StopTeaching::Response>(const std::shared_ptr<kortex_driver::srv::StopTeaching::Request>)> StopTeachingHandler = nullptr;
        virtual bool StopTeaching(const std::shared_ptr<kortex_driver::srv::StopTeaching::Request> req, std::shared_ptr<kortex_driver::srv::StopTeaching::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::AddSequenceTasks::Response>(const std::shared_ptr<kortex_driver::srv::AddSequenceTasks::Request>)> AddSequenceTasksHandler = nullptr;
        virtual bool AddSequenceTasks(const std::shared_ptr<kortex_driver::srv::AddSequenceTasks::Request> req, std::shared_ptr<kortex_driver::srv::AddSequenceTasks::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::UpdateSequenceTask::Response>(const std::shared_ptr<kortex_driver::srv::UpdateSequenceTask::Request>)> UpdateSequenceTaskHandler = nullptr;
        virtual bool UpdateSequenceTask(const std::shared_ptr<kortex_driver::srv::UpdateSequenceTask::Request> req, std::shared_ptr<kortex_driver::srv::UpdateSequenceTask::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::SwapSequenceTasks::Response>(const std::shared_ptr<kortex_driver::srv::SwapSequenceTasks::Request>)> SwapSequenceTasksHandler = nullptr;
        virtual bool SwapSequenceTasks(const std::shared_ptr<kortex_driver::srv::SwapSequenceTasks::Request> req, std::shared_ptr<kortex_driver::srv::SwapSequenceTasks::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::ReadSequenceTask::Response>(const std::shared_ptr<kortex_driver::srv::ReadSequenceTask::Request>)> ReadSequenceTaskHandler = nullptr;
        virtual bool ReadSequenceTask(const std::shared_ptr<kortex_driver::srv::ReadSequenceTask::Request> req, std::shared_ptr<kortex_driver::srv::ReadSequenceTask::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::ReadAllSequenceTasks::Response>(const std::shared_ptr<kortex_driver::srv::ReadAllSequenceTasks::Request>)> ReadAllSequenceTasksHandler = nullptr;
        virtual bool ReadAllSequenceTasks(const std::shared_ptr<kortex_driver::srv::ReadAllSequenceTasks::Request> req, std::shared_ptr<kortex_driver::srv::ReadAllSequenceTasks::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::DeleteSequenceTask::Response>(const std::shared_ptr<kortex_driver::srv::DeleteSequenceTask::Request>)> DeleteSequenceTaskHandler = nullptr;
        virtual bool DeleteSequenceTask(const std::shared_ptr<kortex_driver::srv::DeleteSequenceTask::Request> req, std::shared_ptr<kortex_driver::srv::DeleteSequenceTask::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::DeleteAllSequenceTasks::Response>(const std::shared_ptr<kortex_driver::srv::DeleteAllSequenceTasks::Request>)> DeleteAllSequenceTasksHandler = nullptr;
        virtual bool DeleteAllSequenceTasks(const std::shared_ptr<kortex_driver::srv::DeleteAllSequenceTasks::Request> req, std::shared_ptr<kortex_driver::srv::DeleteAllSequenceTasks::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::TakeSnapshot::Response>(const std::shared_ptr<kortex_driver::srv::TakeSnapshot::Request>)> TakeSnapshotHandler = nullptr;
        virtual bool TakeSnapshot(const std::shared_ptr<kortex_driver::srv::TakeSnapshot::Request> req, std::shared_ptr<kortex_driver::srv::TakeSnapshot::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::GetFirmwareBundleVersions::Response>(const std::shared_ptr<kortex_driver::srv::GetFirmwareBundleVersions::Request>)> GetFirmwareBundleVersionsHandler = nullptr;
        virtual bool GetFirmwareBundleVersions(const std::shared_ptr<kortex_driver::srv::GetFirmwareBundleVersions::Request> req, std::shared_ptr<kortex_driver::srv::GetFirmwareBundleVersions::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::ExecuteWaypointTrajectory::Response>(const std::shared_ptr<kortex_driver::srv::ExecuteWaypointTrajectory::Request>)> ExecuteWaypointTrajectoryHandler = nullptr;
        virtual bool ExecuteWaypointTrajectory(const std::shared_ptr<kortex_driver::srv::ExecuteWaypointTrajectory::Request> req, std::shared_ptr<kortex_driver::srv::ExecuteWaypointTrajectory::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::MoveSequenceTask::Response>(const std::shared_ptr<kortex_driver::srv::MoveSequenceTask::Request>)> MoveSequenceTaskHandler = nullptr;
        virtual bool MoveSequenceTask(const std::shared_ptr<kortex_driver::srv::MoveSequenceTask::Request> req, std::shared_ptr<kortex_driver::srv::MoveSequenceTask::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::DuplicateMapping::Response>(const std::shared_ptr<kortex_driver::srv::DuplicateMapping::Request>)> DuplicateMappingHandler = nullptr;
        virtual bool DuplicateMapping(const std::shared_ptr<kortex_driver::srv::DuplicateMapping::Request> req, std::shared_ptr<kortex_driver::srv::DuplicateMapping::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::DuplicateMap::Response>(const std::shared_ptr<kortex_driver::srv::DuplicateMap::Request>)> DuplicateMapHandler = nullptr;
        virtual bool DuplicateMap(const std::shared_ptr<kortex_driver::srv::DuplicateMap::Request> req, std::shared_ptr<kortex_driver::srv::DuplicateMap::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::SetControllerConfiguration::Response>(const std::shared_ptr<kortex_driver::srv::SetControllerConfiguration::Request>)> SetControllerConfigurationHandler = nullptr;
        virtual bool SetControllerConfiguration(const std::shared_ptr<kortex_driver::srv::SetControllerConfiguration::Request> req, std::shared_ptr<kortex_driver::srv::SetControllerConfiguration::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::GetControllerConfiguration::Response>(const std::shared_ptr<kortex_driver::srv::GetControllerConfiguration::Request>)> GetControllerConfigurationHandler = nullptr;
        virtual bool GetControllerConfiguration(const std::shared_ptr<kortex_driver::srv::GetControllerConfiguration::Request> req, std::shared_ptr<kortex_driver::srv::GetControllerConfiguration::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::GetAllControllerConfigurations::Response>(const std::shared_ptr<kortex_driver::srv::GetAllControllerConfigurations::Request>)> GetAllControllerConfigurationsHandler = nullptr;
        virtual bool GetAllControllerConfigurations(const std::shared_ptr<kortex_driver::srv::GetAllControllerConfigurations::Request> req, std::shared_ptr<kortex_driver::srv::GetAllControllerConfigurations::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::ComputeForwardKinematics::Response>(const std::shared_ptr<kortex_driver::srv::ComputeForwardKinematics::Request>)> ComputeForwardKinematicsHandler = nullptr;
        virtual bool ComputeForwardKinematics(const std::shared_ptr<kortex_driver::srv::ComputeForwardKinematics::Request> req, std::shared_ptr<kortex_driver::srv::ComputeForwardKinematics::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::ComputeInverseKinematics::Response>(const std::shared_ptr<kortex_driver::srv::ComputeInverseKinematics::Request>)> ComputeInverseKinematicsHandler = nullptr;
        virtual bool ComputeInverseKinematics(const std::shared_ptr<kortex_driver::srv::ComputeInverseKinematics::Request> req, std::shared_ptr<kortex_driver::srv::ComputeInverseKinematics::Response> res) override;
        std::function<std::shared_ptr<kortex_driver::srv::ValidateWaypointList::Response>(const std::shared_ptr<kortex_driver::srv::ValidateWaypointList::Request>)> ValidateWaypointListHandler = nullptr;
        virtual bool ValidateWaypointList(const std::shared_ptr<kortex_driver::srv::ValidateWaypointList::Request> req, std::shared_ptr<kortex_driver::srv::ValidateWaypointList::Response> res) override;

};
#endif
